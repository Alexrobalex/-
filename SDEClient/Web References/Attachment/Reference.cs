//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace SDEClient.Attachment {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AttachmentToolsSoap", Namespace="http://SDETools/AttachmentTools/")]
    public partial class AttachmentTools : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetREQUESTSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentNumOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AttachmentTools() {
            this.Url = global::SDEClient.Properties.Settings.Default.服务平台增强工具_Attachment_AttachmentTools;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SelectCompletedEventHandler SelectCompleted;
        
        /// <remarks/>
        public event IndexCompletedEventHandler IndexCompleted;
        
        /// <remarks/>
        public event SaveCompletedEventHandler SaveCompleted;
        
        /// <remarks/>
        public event GetDateTimeCompletedEventHandler GetDateTimeCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event GetFileInfoCompletedEventHandler GetFileInfoCompleted;
        
        /// <remarks/>
        public event DownFileCompletedEventHandler DownFileCompleted;
        
        /// <remarks/>
        public event GetREQUESTSCompletedEventHandler GetREQUESTSCompleted;
        
        /// <remarks/>
        public event GetAttachmentNumCompletedEventHandler GetAttachmentNumCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/Select", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Select(string AttachmentID) {
            object[] results = this.Invoke("Select", new object[] {
                        AttachmentID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAsync(string AttachmentID) {
            this.SelectAsync(AttachmentID, null);
        }
        
        /// <remarks/>
        public void SelectAsync(string AttachmentID, object userState) {
            if ((this.SelectOperationCompleted == null)) {
                this.SelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOperationCompleted);
            }
            this.InvokeAsync("Select", new object[] {
                        AttachmentID}, this.SelectOperationCompleted, userState);
        }
        
        private void OnSelectOperationCompleted(object arg) {
            if ((this.SelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCompleted(this, new SelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/Index", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Index(string REQCODE, string DT_S, string DT_E) {
            object[] results = this.Invoke("Index", new object[] {
                        REQCODE,
                        DT_S,
                        DT_E});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void IndexAsync(string REQCODE, string DT_S, string DT_E) {
            this.IndexAsync(REQCODE, DT_S, DT_E, null);
        }
        
        /// <remarks/>
        public void IndexAsync(string REQCODE, string DT_S, string DT_E, object userState) {
            if ((this.IndexOperationCompleted == null)) {
                this.IndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndexOperationCompleted);
            }
            this.InvokeAsync("Index", new object[] {
                        REQCODE,
                        DT_S,
                        DT_E}, this.IndexOperationCompleted, userState);
        }
        
        private void OnIndexOperationCompleted(object arg) {
            if ((this.IndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndexCompleted(this, new IndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/Save", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Save(string REQCODE, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fs, string path, string Attachment_Name, string Attachment_Name_new, string Attachment_Type, string Attachment_Desc, string Proprogress) {
            object[] results = this.Invoke("Save", new object[] {
                        REQCODE,
                        fs,
                        path,
                        Attachment_Name,
                        Attachment_Name_new,
                        Attachment_Type,
                        Attachment_Desc,
                        Proprogress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAsync(string REQCODE, byte[] fs, string path, string Attachment_Name, string Attachment_Name_new, string Attachment_Type, string Attachment_Desc, string Proprogress) {
            this.SaveAsync(REQCODE, fs, path, Attachment_Name, Attachment_Name_new, Attachment_Type, Attachment_Desc, Proprogress, null);
        }
        
        /// <remarks/>
        public void SaveAsync(string REQCODE, byte[] fs, string path, string Attachment_Name, string Attachment_Name_new, string Attachment_Type, string Attachment_Desc, string Proprogress, object userState) {
            if ((this.SaveOperationCompleted == null)) {
                this.SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOperationCompleted);
            }
            this.InvokeAsync("Save", new object[] {
                        REQCODE,
                        fs,
                        path,
                        Attachment_Name,
                        Attachment_Name_new,
                        Attachment_Type,
                        Attachment_Desc,
                        Proprogress}, this.SaveOperationCompleted, userState);
        }
        
        private void OnSaveOperationCompleted(object arg) {
            if ((this.SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompleted(this, new SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/GetDateTime", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDateTime() {
            object[] results = this.Invoke("GetDateTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateTimeAsync() {
            this.GetDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetDateTimeAsync(object userState) {
            if ((this.GetDateTimeOperationCompleted == null)) {
                this.GetDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetDateTime", new object[0], this.GetDateTimeOperationCompleted, userState);
        }
        
        private void OnGetDateTimeOperationCompleted(object arg) {
            if ((this.GetDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateTimeCompleted(this, new GetDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/Delete", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(string Attachment_ID) {
            object[] results = this.Invoke("Delete", new object[] {
                        Attachment_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string Attachment_ID) {
            this.DeleteAsync(Attachment_ID, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Attachment_ID, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Attachment_ID}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/GetFileInfo", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileInfo(string Attachment_ID) {
            object[] results = this.Invoke("GetFileInfo", new object[] {
                        Attachment_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string Attachment_ID) {
            this.GetFileInfoAsync(Attachment_ID, null);
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string Attachment_ID, object userState) {
            if ((this.GetFileInfoOperationCompleted == null)) {
                this.GetFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetFileInfo", new object[] {
                        Attachment_ID}, this.GetFileInfoOperationCompleted, userState);
        }
        
        private void OnGetFileInfoOperationCompleted(object arg) {
            if ((this.GetFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInfoCompleted(this, new GetFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/DownFile", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownFile(string Attachment_ID, long PosOffset, int BlockLength) {
            object[] results = this.Invoke("DownFile", new object[] {
                        Attachment_ID,
                        PosOffset,
                        BlockLength});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownFileAsync(string Attachment_ID, long PosOffset, int BlockLength) {
            this.DownFileAsync(Attachment_ID, PosOffset, BlockLength, null);
        }
        
        /// <remarks/>
        public void DownFileAsync(string Attachment_ID, long PosOffset, int BlockLength, object userState) {
            if ((this.DownFileOperationCompleted == null)) {
                this.DownFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownFileOperationCompleted);
            }
            this.InvokeAsync("DownFile", new object[] {
                        Attachment_ID,
                        PosOffset,
                        BlockLength}, this.DownFileOperationCompleted, userState);
        }
        
        private void OnDownFileOperationCompleted(object arg) {
            if ((this.DownFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownFileCompleted(this, new DownFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/GetREQUESTS", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetREQUESTS(string REQCODE) {
            object[] results = this.Invoke("GetREQUESTS", new object[] {
                        REQCODE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetREQUESTSAsync(string REQCODE) {
            this.GetREQUESTSAsync(REQCODE, null);
        }
        
        /// <remarks/>
        public void GetREQUESTSAsync(string REQCODE, object userState) {
            if ((this.GetREQUESTSOperationCompleted == null)) {
                this.GetREQUESTSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetREQUESTSOperationCompleted);
            }
            this.InvokeAsync("GetREQUESTS", new object[] {
                        REQCODE}, this.GetREQUESTSOperationCompleted, userState);
        }
        
        private void OnGetREQUESTSOperationCompleted(object arg) {
            if ((this.GetREQUESTSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetREQUESTSCompleted(this, new GetREQUESTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://SDETools/AttachmentTools/GetAttachmentNum", RequestNamespace="http://SDETools/AttachmentTools/", ResponseNamespace="http://SDETools/AttachmentTools/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAttachmentNum() {
            object[] results = this.Invoke("GetAttachmentNum", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentNumAsync() {
            this.GetAttachmentNumAsync(null);
        }
        
        /// <remarks/>
        public void GetAttachmentNumAsync(object userState) {
            if ((this.GetAttachmentNumOperationCompleted == null)) {
                this.GetAttachmentNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentNumOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentNum", new object[0], this.GetAttachmentNumOperationCompleted, userState);
        }
        
        private void OnGetAttachmentNumOperationCompleted(object arg) {
            if ((this.GetAttachmentNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentNumCompleted(this, new GetAttachmentNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SelectCompletedEventHandler(object sender, SelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void IndexCompletedEventHandler(object sender, IndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveCompletedEventHandler(object sender, SaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetDateTimeCompletedEventHandler(object sender, GetDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileInfoCompletedEventHandler(object sender, GetFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DownFileCompletedEventHandler(object sender, DownFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetREQUESTSCompletedEventHandler(object sender, GetREQUESTSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetREQUESTSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetREQUESTSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAttachmentNumCompletedEventHandler(object sender, GetAttachmentNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591